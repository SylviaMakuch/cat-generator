{"ast":null,"code":"import _asyncToGenerator from\"/Users/sylvia/cat-marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/sylvia/cat-marketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/sylvia/cat-marketplace/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import _regeneratorRuntime from\"/Users/sylvia/cat-marketplace/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import styled from'styled-components';import{useState,useEffect}from'react';import Preloader from'./Preloader';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Card=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    backdrop-filter: blur(25px) saturate(200%);\\n    -webkit-backdrop-filter: blur(25px) saturate(200%);\\n    background-color: #b206d42b;\\n    border: 2px solid hsla(0, 0%, 100%, 0.125);\\n    height: 450px;  \\n    border-radius: 20px;\\n    overflow: hidden;\\n    text-decoration: none;\\n    margin: 20px;\\n    padding: 20px;\\n    transition: 0.4s ease-out;\\n    box-shadow: 0px 7px 10px rgba(black, 0.5);\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n  &:hover{\\n    transform: translateY(-20px)\\n    }\\n\"])));var Image=styled.img(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    width: 300px;\\n    height: 320px;\\n    border-radius: 8%;\\n\"])));var Button=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 24px 32px;\\n  border: 0;\\n  text-decoration: none;\\n  border-radius: 15px;\\n  background-color: rgba(255,255,255,0.1);\\n  border: 1px solid rgba(255,255,255,0.1);\\n  backdrop-filter: blur(30px);\\n  color: rgba(255,255,255,0.8);\\n  font-size: 14px;\\n  letter-spacing: 2px;\\n  cursor: pointer;\\n  text-transform: uppercase;\\n   &:hover {\\n    background-position: right center; /* change the direction of the change here */\\n    background-color: rgba(255,255,255,0.2);\\n}\\n\"])));export default function CardComponent(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isClicked=_useState4[0],setIsClicked=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),isError=_useState8[0],setIsError=_useState8[1];var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://api.thecatapi.com/v1/images/search');case 2:data=_context.sent;fetch(\"https://api.thecatapi.com/v1/images/search\",{headers:{\"Content-Type\":\"application/json\",\"x-api-key\":\"a1dd61b4-b654-4001-a4f4-5ec7c2386882\"}}).then(function(response){response.json().then(function(data){setCards(data[0].url);setIsLoading(true);}).catch(function(error){return setIsError(error);}).finally(function(){return setIsLoading(true);});});case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchData();},[]);if(isError){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",isError]});}return/*#__PURE__*/_jsxs(Card,{children:[isLoading?/*#__PURE__*/_jsx(Image,{src:cards}):/*#__PURE__*/_jsx(Preloader,{}),/*#__PURE__*/_jsx(Button,{onClick:fetchData,children:\"New Kitty\"})]});}","map":{"version":3,"sources":["/Users/sylvia/cat-marketplace/src/componets/Card.tsx"],"names":["React","styled","useState","useEffect","Preloader","Card","div","Image","img","Button","button","CardComponent","cards","setCards","isClicked","setIsClicked","isLoading","setIsLoading","isError","setIsError","fetchData","fetch","data","headers","then","response","json","url","catch","error","finally"],"mappings":"qhBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAGJ,MAAM,CAACK,GAAV,omBAAV,CAqBA,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACO,GAAV,oIAAX,CAMA,GAAMC,CAAAA,MAAM,CAAGR,MAAM,CAACS,MAAV,kkBAAZ,CAoBA,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACpC,cAA0BT,QAAQ,EAAlC,wCAAOU,KAAP,eAAcC,QAAd,eACA,eAAkCX,QAAQ,CAAC,KAAD,CAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eACA,eAAkCb,QAAQ,CAAC,KAAD,CAA1C,yCAAOc,SAAP,eAAkBC,YAAlB,eACA,eAA8Bf,QAAQ,EAAtC,yCAAOgB,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,SAAS,0FAAG,kKACKC,CAAAA,KAAK,CAAC,4CAAD,CADV,QACRC,IADQ,eAGdD,KAAK,CAAC,4CAAD,CAA+C,CAChDE,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,YAAa,sCAFR,CADuC,CAA/C,CAAL,CAMKC,IANL,CAMU,SAAAC,QAAQ,CAAI,CACdA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAAAF,IAAI,CAAI,CACzBT,QAAQ,CAACS,IAAI,CAAC,CAAD,CAAJ,CAAQK,GAAT,CAAR,CACAV,YAAY,CAAC,IAAD,CAAZ,CACH,CAHD,EAIKW,KAJL,CAIW,SAAAC,KAAK,QAAIV,CAAAA,UAAU,CAACU,KAAD,CAAd,EAJhB,EAKKC,OALL,CAKa,iBAAMb,CAAAA,YAAY,CAAC,IAAD,CAAlB,EALb,EAMH,CAbL,EAHc,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CAoBAjB,SAAS,CAAC,UAAM,CACZiB,SAAS,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIF,OAAJ,CAAa,CACT,mBAAO,iCAAaA,OAAb,GAAP,CACH,CACD,mBACI,MAAC,IAAD,YACKF,SAAS,cAAI,KAAC,KAAD,EAAO,GAAG,CAAEJ,KAAZ,EAAJ,cAA8B,KAAC,SAAD,IAD5C,cAEI,KAAC,MAAD,EAAQ,OAAO,CAAGQ,SAAlB,uBAFJ,GADJ,CASH","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport Preloader from './Preloader';\n\nconst Card = styled.div`\n    backdrop-filter: blur(25px) saturate(200%);\n    -webkit-backdrop-filter: blur(25px) saturate(200%);\n    background-color: #b206d42b;\n    border: 2px solid hsla(0, 0%, 100%, 0.125);\n    height: 450px;  \n    border-radius: 20px;\n    overflow: hidden;\n    text-decoration: none;\n    margin: 20px;\n    padding: 20px;\n    transition: 0.4s ease-out;\n    box-shadow: 0px 7px 10px rgba(black, 0.5);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n  &:hover{\n    transform: translateY(-20px)\n    }\n`;\n\nconst Image = styled.img`\n    width: 300px;\n    height: 320px;\n    border-radius: 8%;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  padding: 24px 32px;\n  border: 0;\n  text-decoration: none;\n  border-radius: 15px;\n  background-color: rgba(255,255,255,0.1);\n  border: 1px solid rgba(255,255,255,0.1);\n  backdrop-filter: blur(30px);\n  color: rgba(255,255,255,0.8);\n  font-size: 14px;\n  letter-spacing: 2px;\n  cursor: pointer;\n  text-transform: uppercase;\n   &:hover {\n    background-position: right center; /* change the direction of the change here */\n    background-color: rgba(255,255,255,0.2);\n}\n`;\n\nexport default function CardComponent() {\n    const [cards, setCards] = useState();\n    const [isClicked, setIsClicked] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState();\n\n    const fetchData = async () => {\n        const data = await fetch('https://api.thecatapi.com/v1/images/search');\n\n        fetch(\"https://api.thecatapi.com/v1/images/search\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-api-key\": \"a1dd61b4-b654-4001-a4f4-5ec7c2386882\"\n            }\n        })\n            .then(response => {\n                response.json().then(data => {\n                    setCards(data[0].url);\n                    setIsLoading(true);\n                })\n                    .catch(error => setIsError(error))\n                    .finally(() => setIsLoading(true));\n            })\n\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    if (isError) {\n        return <div>Error: {isError}</div>;\n    }\n    return (\n        <Card>\n            {isLoading ? (<Image src={cards} />) : (<Preloader />)}\n            <Button onClick={(fetchData)}>\n                New Kitty\n            </Button>\n        </Card>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}