{"ast":null,"code":"var _jsxFileName = \"/Users/sylvia/cat-marketplace/src/componets/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport Preloader from './Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n    backdrop-filter: blur(25px) saturate(200%);\n    -webkit-backdrop-filter: blur(25px) saturate(200%);\n    background-color: #b206d42b;\n    border: 2px solid hsla(0, 0%, 100%, 0.125);\n    height: 450px;  \n    border-radius: 20px;\n    overflow: hidden;\n    text-decoration: none;\n    margin: 20px;\n    padding: 20px;\n    transition: 0.4s ease-out;\n    box-shadow: 0px 7px 10px rgba(black, 0.5);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n  &:hover{\n    transform: translateY(-20px)\n    }\n`;\n_c = Card;\nconst Image = styled.img`\n    width: 300px;\n    height: 320px;\n    border-radius: 8%;\n`;\n_c2 = Image;\nconst Button = styled.button`\n  display: inline-block;\n  padding: 24px 32px;\n  border: 0;\n  text-decoration: none;\n  border-radius: 15px;\n  background-color: rgba(255,255,255,0.1);\n  border: 1px solid rgba(255,255,255,0.1);\n  backdrop-filter: blur(30px);\n  color: rgba(255,255,255,0.8);\n  font-size: 14px;\n  letter-spacing: 2px;\n  cursor: pointer;\n  text-transform: uppercase;\n   &:hover {\n    background-position: right center; /* change the direction of the change here */\n    background-color: rgba(255,255,255,0.2);\n}\n`;\n_c3 = Button;\nexport default function CardComponent() {\n  _s();\n\n  const [cards, setCards] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState();\n\n  const fetchData = async () => {\n    const data = await fetch('https://api.thecatapi.com/v1/images/search');\n    fetch(\"https://api.thecatapi.com/v1/images/search\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": \"a1dd61b4-b654-4001-a4f4-5ec7c2386882\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        setCards(data);\n        setCards(data[0].url);\n        setIsLoading(true);\n      }).catch(error => setIsError(error)).finally(() => setIsLoading(true));\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", isError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Image, {\n      src: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchData,\n      children: \"New Kitty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardComponent, \"y+HwNXXsrS5lktW0IjWdoMgkPU4=\");\n\n_c4 = CardComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"CardComponent\");","map":{"version":3,"sources":["/Users/sylvia/cat-marketplace/src/componets/Card.tsx"],"names":["React","styled","useState","useEffect","Preloader","Card","div","Image","img","Button","button","CardComponent","cards","setCards","isClicked","setIsClicked","isLoading","setIsLoading","isError","setIsError","fetchData","data","fetch","headers","then","response","json","url","catch","error","finally"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;KAAMD,I;AAqBN,MAAME,KAAK,GAAGN,MAAM,CAACO,GAAI;AACzB;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,MAAME,MAAM,GAAGR,MAAM,CAACS,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,M;AAoBN,eAAe,SAASE,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,EAAtC;;AAEA,QAAMkB,SAAS,GAAG,YAAY;AAC1B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAxB;AAEAA,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAChDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,qBAAa;AAFR;AADuC,KAA/C,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBH,IAAI,IAAI;AACzBR,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAR,QAAAA,QAAQ,CAACQ,IAAI,CAAC,CAAD,CAAJ,CAAQM,GAAT,CAAR;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAJD,EAKKW,KALL,CAKWC,KAAK,IAAIV,UAAU,CAACU,KAAD,CAL9B,EAMKC,OANL,CAMa,MAAMb,YAAY,CAAC,IAAD,CAN/B;AAOH,KAdL;AAgBH,GAnBD;;AAqBAd,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,OAAJ,EAAa;AACT,wBAAO;AAAA,4BAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI,QAAC,IAAD;AAAA,eACKF,SAAS,gBAAI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAA8B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAD5C,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGQ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA3CuBT,a;;MAAAA,a","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport Preloader from './Preloader';\n\nconst Card = styled.div`\n    backdrop-filter: blur(25px) saturate(200%);\n    -webkit-backdrop-filter: blur(25px) saturate(200%);\n    background-color: #b206d42b;\n    border: 2px solid hsla(0, 0%, 100%, 0.125);\n    height: 450px;  \n    border-radius: 20px;\n    overflow: hidden;\n    text-decoration: none;\n    margin: 20px;\n    padding: 20px;\n    transition: 0.4s ease-out;\n    box-shadow: 0px 7px 10px rgba(black, 0.5);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n  &:hover{\n    transform: translateY(-20px)\n    }\n`;\n\nconst Image = styled.img`\n    width: 300px;\n    height: 320px;\n    border-radius: 8%;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  padding: 24px 32px;\n  border: 0;\n  text-decoration: none;\n  border-radius: 15px;\n  background-color: rgba(255,255,255,0.1);\n  border: 1px solid rgba(255,255,255,0.1);\n  backdrop-filter: blur(30px);\n  color: rgba(255,255,255,0.8);\n  font-size: 14px;\n  letter-spacing: 2px;\n  cursor: pointer;\n  text-transform: uppercase;\n   &:hover {\n    background-position: right center; /* change the direction of the change here */\n    background-color: rgba(255,255,255,0.2);\n}\n`;\n\nexport default function CardComponent() {\n    const [cards, setCards] = useState();\n    const [isClicked, setIsClicked] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState();\n\n    const fetchData = async () => {\n        const data = await fetch('https://api.thecatapi.com/v1/images/search');\n\n        fetch(\"https://api.thecatapi.com/v1/images/search\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-api-key\": \"a1dd61b4-b654-4001-a4f4-5ec7c2386882\"\n            }\n        })\n            .then(response => {\n                response.json().then(data => {\n                    setCards(data);\n                    setCards(data[0].url);\n                    setIsLoading(true);\n                })\n                    .catch(error => setIsError(error))\n                    .finally(() => setIsLoading(true));\n            })\n\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    if (isError) {\n        return <div>Error: {isError}</div>;\n    }\n    return (\n        <Card>\n            {isLoading ? (<Image src={cards} />) : (<Preloader />)}\n            <Button onClick={(fetchData)}>\n                New Kitty\n            </Button>\n        </Card>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}